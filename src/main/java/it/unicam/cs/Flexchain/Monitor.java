/*
package it.unicam.cs.Flexchain;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

*/
/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 *//*

@SuppressWarnings("rawtypes")
public class Monitor extends Contract {
    public static final String BINARY = "object\": \"608060405234801561001057600080fd5b50611f09806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b9f6ac9146100515780633efabd491461006d578063976514671461009d5780639a2a95de146100bb575b600080fd5b61006b600480360381019061006691906105ab565b6100eb565b005b610087600480360381019061008291906105ab565b610264565b60405161009491906107b2565b60405180910390f35b6100a5610328565b6040516100b291906107cd565b60405180910390f35b6100d560048036038101906100d091906105ab565b610401565b6040516100e291906107ef565b60405180910390f35b336040516100f890610448565b61010291906107b2565b604051809103906000f08015801561011e573d6000803e3d6000fd5b5060008260405161012f9190610784565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000805b60018054905081101561021557600181815481106101a05761019f610a93565b5b906000526020600020016040516020016101ba919061079b565b60405160208183030381529060405280519060200120836040516020016101e19190610784565b60405160208183030381529060405280519060200120141561020257600191505b808061020d906109ec565b91505061017f565b506000151581151514156102605760018290806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061025e929190610456565b505b5050565b600080826040516102759190610784565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b1580156102e957600080fd5b505afa1580156102fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610321919061057e565b9050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156103f857838290600052602060002001805461036b90610989565b80601f016020809104026020016040519081016040528092919081815260200182805461039790610989565b80156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b50505050508152602001906001019061034c565b50505050905090565b600080826040516104129190610784565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6113a68062000b2e83390190565b82805461046290610989565b90600052602060002090601f01602090048101928261048457600085556104cb565b82601f1061049d57805160ff19168380011785556104cb565b828001600101855582156104cb579182015b828111156104ca5782518255916020019190600101906104af565b5b5090506104d891906104dc565b5090565b5b808211156104f55760008160009055506001016104dd565b5090565b600061050c6105078461082f565b61080a565b90508281526020810184848401111561052857610527610af6565b5b610533848285610947565b509392505050565b60008151905061054a81610b16565b92915050565b600082601f83011261056557610564610af1565b5b81356105758482602086016104f9565b91505092915050565b60006020828403121561059457610593610b00565b5b60006105a28482850161053b565b91505092915050565b6000602082840312156105c1576105c0610b00565b5b600082013567ffffffffffffffff8111156105df576105de610afb565b5b6105eb84828501610550565b91505092915050565b6000610600838361069b565b905092915050565b610611816108d5565b82525050565b600061062282610885565b61062c81856108a8565b93508360208202850161063e85610860565b8060005b8581101561067a578484038952815161065b85826105f4565b94506106668361089b565b925060208a01995050600181019050610642565b50829750879550505050505092915050565b61069581610911565b82525050565b60006106a682610890565b6106b081856108b9565b93506106c0818560208601610956565b6106c981610b05565b840191505092915050565b60006106df82610890565b6106e981856108ca565b93506106f9818560208601610956565b80840191505092915050565b6000815461071281610989565b61071c81866108ca565b9450600182166000811461073757600181146107485761077b565b60ff1983168652818601935061077b565b61075185610870565b60005b8381101561077357815481890152600182019150602081019050610754565b838801955050505b50505092915050565b600061079082846106d4565b915081905092915050565b60006107a78284610705565b915081905092915050565b60006020820190506107c76000830184610608565b92915050565b600060208201905081810360008301526107e78184610617565b905092915050565b6000602082019050610804600083018461068c565b92915050565b6000610814610825565b905061082082826109bb565b919050565b6000604051905090565b600067ffffffffffffffff82111561084a57610849610ac2565b5b61085382610b05565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006108e0826108e7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061091c82610923565b9050919050565b600061092e82610935565b9050919050565b6000610940826108e7565b9050919050565b82818337600083830152505050565b60005b83811015610974578082015181840152602081019050610959565b83811115610983576000848401525b50505050565b600060028204905060018216806109a157607f821691505b602082108114156109b5576109b4610a64565b5b50919050565b6109c482610b05565b810181811067ffffffffffffffff821117156109e3576109e2610ac2565b5b80604052505050565b60006109f782610907565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a2a57610a29610a35565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610b1f816108d5565b8114610b2a57600080fd5b5056fe60806040526000600860006101000a81548160ff021916908360ff1602179055503480156200002d57600080fd5b50604051620013a6380380620013a68339818101604052810190620000539190620000b2565b80600860016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000137565b600081519050620000ac816200011d565b92915050565b600060208284031215620000cb57620000ca62000118565b5b6000620000db848285016200009b565b91505092915050565b6000620000f182620000f8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200012881620000e4565b81146200013457600080fd5b50565b61125f80620001476000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806394bf28221161006657806394bf2822146101595780639535ce12146101775780639c981fcb146101a7578063f27a6e22146101d7578063fda69fae146101f55761009e565b80630cc4e8d8146100a35780631bd95155146100d35780637172b12714610103578063857ac45d1461011f578063893d20e81461013b575b600080fd5b6100bd60048036038101906100b89190610bff565b610225565b6040516100ca9190610db3565b60405180910390f35b6100ed60048036038101906100e89190610bff565b61025a565b6040516100fa9190610df0565b60405180910390f35b61011d60048036038101906101189190610b28565b6102fa565b005b61013960048036038101906101349190610c48565b6105d1565b005b610143610603565b6040516101509190610d7d565b60405180910390f35b61016161062d565b60405161016e9190610dce565b60405180910390f35b610191600480360381019061018c9190610bff565b6106bf565b60405161019e9190610d98565b60405180910390f35b6101c160048036038101906101bc9190610bff565b6106f4565b6040516101ce9190610dce565b60405180910390f35b6101df6107a4565b6040516101ec9190610dce565b60405180910390f35b61020f600480360381019061020a9190610bff565b610836565b60405161021c9190610df0565b60405180910390f35b60006004826040516102379190610d66565b908152602001604051809103902060009054906101000a900460ff169050919050565b6000808290506000809250600090505b81518110156102f35760008282815181106102885761028761118d565b5b602001015160f81c60f81b60f81c905060308160ff16101580156102b0575060398160ff1611155b156102df576030816102c29190610f64565b60ff16600a856102d29190610f0a565b6102dc9190610eb4565b93505b5080806102eb906110b7565b91505061026a565b5050919050565b6000845111156105845760005b8451811015610582576103698582815181106103265761032561118d565b5b60200260200101516040518060400160405280600681526020017f737472696e67000000000000000000000000000000000000000000000000000081525061085e565b156103da578281815181106103815761038061118d565b5b6020026020010151600585838151811061039e5761039d61118d565b5b60200260200101516040516103b39190610d66565b908152602001604051809103902090805190602001906103d4929190610959565b5061056f565b6104338582815181106103f0576103ef61118d565b5b60200260200101516040518060400160405280600481526020017f75696e740000000000000000000000000000000000000000000000000000000081525061085e565b1561049c5761045b83828151811061044e5761044d61118d565b5b602002602001015161025a565b60078583815181106104705761046f61118d565b5b60200260200101516040516104859190610d66565b90815260200160405180910390208190555061056e565b6104f58582815181106104b2576104b161118d565b5b60200260200101516040518060400160405280600481526020017f626f6f6c0000000000000000000000000000000000000000000000000000000081525061085e565b1561056d5761051d8382815181106105105761050f61118d565b5b60200260200101516108b7565b60068583815181106105325761053161118d565b5b60200260200101516040516105479190610d66565b908152602001604051809103902060006101000a81548160ff0219169083151502179055505b5b5b808061057a906110b7565b915050610307565b505b60026004826040516105969190610d66565b908152602001604051809103902060006101000a81548160ff021916908360028111156105c6576105c561112f565b5b021790555050505050565b81600190805190602001906105e7929190610959565b5080600090805190602001906105fe929190610959565b505050565b6000600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461063c90611054565b80601f016020809104026020016040519081016040528092919081815260200182805461066890611054565b80156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b5050505050905090565b60006006826040516106d19190610d66565b908152602001604051809103902060009054906101000a900460ff169050919050565b60606005826040516107069190610d66565b9081526020016040518091039020805461071f90611054565b80601f016020809104026020016040519081016040528092919081815260200182805461074b90611054565b80156107985780601f1061076d57610100808354040283529160200191610798565b820191906000526020600020905b81548152906001019060200180831161077b57829003601f168201915b50505050509050919050565b6060600080546107b390611054565b80601f01602080910402602001604051908101604052809291908181526020018280546107df90611054565b801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b5050505050905090565b60006007826040516108489190610d66565b9081526020016040518091039020549050919050565b6000816040516020016108719190610dce565b60405160208183030381529060405280519060200120836040516020016108989190610dce565b6040516020818303038152906040528051906020012014905092915050565b60006108f8826040518060400160405280600481526020017f747275650000000000000000000000000000000000000000000000000000000081525061085e565b156109065760019050610954565b610945826040518060400160405280600581526020017f66616c736500000000000000000000000000000000000000000000000000000081525061085e565b156109535760009050610954565b5b919050565b82805461096590611054565b90600052602060002090601f01602090048101928261098757600085556109ce565b82601f106109a057805160ff19168380011785556109ce565b828001600101855582156109ce579182015b828111156109cd5782518255916020019190600101906109b2565b5b5090506109db91906109df565b5090565b5b808211156109f85760008160009055506001016109e0565b5090565b6000610a0f610a0a84610e30565b610e0b565b90508083825260208201905082856020860282011115610a3257610a316111f0565b5b60005b85811015610a8057813567ffffffffffffffff811115610a5857610a576111eb565b5b808601610a658982610afa565b85526020850194506020840193505050600181019050610a35565b5050509392505050565b6000610a9d610a9884610e5c565b610e0b565b905082815260208101848484011115610ab957610ab86111f5565b5b610ac4848285611012565b509392505050565b600082601f830112610ae157610ae06111eb565b5b8135610af18482602086016109fc565b91505092915050565b600082601f830112610b0f57610b0e6111eb565b5b8135610b1f848260208601610a8a565b91505092915050565b60008060008060808587031215610b4257610b416111ff565b5b600085013567ffffffffffffffff811115610b6057610b5f6111fa565b5b610b6c87828801610acc565b945050602085013567ffffffffffffffff811115610b8d57610b8c6111fa565b5b610b9987828801610acc565b935050604085013567ffffffffffffffff811115610bba57610bb96111fa565b5b610bc687828801610acc565b925050606085013567ffffffffffffffff811115610be757610be66111fa565b5b610bf387828801610afa565b91505092959194509250565b600060208284031215610c1557610c146111ff565b5b600082013567ffffffffffffffff811115610c3357610c326111fa565b5b610c3f84828501610afa565b91505092915050565b60008060408385031215610c5f57610c5e6111ff565b5b600083013567ffffffffffffffff811115610c7d57610c7c6111fa565b5b610c8985828601610afa565b925050602083013567ffffffffffffffff811115610caa57610ca96111fa565b5b610cb685828601610afa565b9150509250929050565b610cc981610f98565b82525050565b610cd881610faa565b82525050565b610ce781611000565b82525050565b6000610cf882610e8d565b610d028185610e98565b9350610d12818560208601611021565b610d1b81611204565b840191505092915050565b6000610d3182610e8d565b610d3b8185610ea9565b9350610d4b818560208601611021565b80840191505092915050565b610d6081610fe9565b82525050565b6000610d728284610d26565b915081905092915050565b6000602082019050610d926000830184610cc0565b92915050565b6000602082019050610dad6000830184610ccf565b92915050565b6000602082019050610dc86000830184610cde565b92915050565b60006020820190508181036000830152610de88184610ced565b905092915050565b6000602082019050610e056000830184610d57565b92915050565b6000610e15610e26565b9050610e218282611086565b919050565b6000604051905090565b600067ffffffffffffffff821115610e4b57610e4a6111bc565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e7757610e766111bc565b5b610e8082611204565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610ebf82610fe9565b9150610eca83610fe9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eff57610efe611100565b5b828201905092915050565b6000610f1582610fe9565b9150610f2083610fe9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5957610f58611100565b5b828202905092915050565b6000610f6f82610ff3565b9150610f7a83610ff3565b925082821015610f8d57610f8c611100565b5b828203905092915050565b6000610fa382610fc9565b9050919050565b60008115159050919050565b6000819050610fc482611215565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061100b82610fb6565b9050919050565b82818337600083830152505050565b60005b8381101561103f578082015181840152602081019050611024565b8381111561104e576000848401525b50505050565b6000600282049050600182168061106c57607f821691505b602082108114156110805761107f61115e565b5b50919050565b61108f82611204565b810181811067ffffffffffffffff821117156110ae576110ad6111bc565b5b80604052505050565b60006110c282610fe9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110f5576110f4611100565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b600381106112265761122561112f565b5b5056fea26469706673582212204bb07739eead041e17f271b8384611b080eda206e4d2602156aaef1a933ca1f864736f6c63430008070033a2646970667358221220c9d0a9acdb9e7ad7533244d34efda256f36dae8f4aa8ceaf1c5fe3ab1810a88264736f6c63430008070033";

    public static final String FUNC_GETDIAGRAMNAMES = "getDiagramNames";

    public static final String FUNC_GETPROCESS = "getProcess";

    public static final String FUNC_GETPROCESSOWNER = "getProcessOwner";

    public static final String FUNC_INSTANTIATEPROCESS = "instantiateProcess";

    @Deprecated
    protected Monitor(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Monitor(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Monitor(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Monitor(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<List> getDiagramNames() {
        final Function function = new Function(FUNC_GETDIAGRAMNAMES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<String> getProcess(String processName) {
        final Function function = new Function(FUNC_GETPROCESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(processName)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getProcessOwner(String processName) {
        final Function function = new Function(FUNC_GETPROCESSOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(processName)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> instantiateProcess(String processName) {
        final Function function = new Function(
                FUNC_INSTANTIATEPROCESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(processName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Monitor load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Monitor(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Monitor load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Monitor(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Monitor load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Monitor(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Monitor load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Monitor(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Monitor> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Monitor.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Monitor> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Monitor.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Monitor> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Monitor.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Monitor> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Monitor.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
*/
